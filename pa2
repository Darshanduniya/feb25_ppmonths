import re

hive_create_statement = """\
/usr/local/hive/bin/hive -e 'CREATE TABLE IF NOT EXISTS prd_us_npd_pos_tec_cet.fact_sltransactions_stg_nnn (
    rid bigint,
    retailer_item_id bigint,
    col_20 string,
    mod_type string
) 
PARTITIONED BY (pp_week int, pp_month int) 
ROW FORMAT SERDE 
    """org.apache.hadoop.hive.ql.io.orc.OrcSerde""" 
STORED AS INPUTFORMAT 
    """org.apache.hadoop.hive.ql.io.orc.OrcInputFormat""" 
OUTPUTFORMAT 
    """org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat""" 
LOCATION 
    """hdfs://lnx3555.ch3.prod.i.com:9000/user/hive/warehouse/prd_us_npd_pos_tec_cet.db/fact_sltransactions""" 
TBLPROPERTIES ( 
    """orc.compress"""="""SNAPPY""", 
    """transient_lastDdlTime"""="""1662646717"""
);
"""

# Extract the partitioned columns dynamically
partition_match = re.search(r"PARTITIONED BY \((.*?)\)", hive_create_statement, re.DOTALL)
partition_columns = partition_match.group(1) if partition_match else ""

# Extract transient_lastDdlTime value dynamically
ddl_time_match = re.search(r'"transient_lastDdlTime"""="""(\d+)', hive_create_statement)
ddl_time_value = ddl_time_match.group(1) if ddl_time_match else ""

# Remove PARTITIONED BY and everything after it
hive_create_statement = hive_create_statement.split("PARTITIONED BY")[0].strip()

# Insert partition columns inside the table schema
hive_create_statement = hive_create_statement[:-1] + f",\n    {partition_columns}\n)"

# Modify storage format
hive_create_statement += f"\nUSING orc\n    'transient_lastDdlTime'='{ddl_time_value}'\n);"

print(hive_create_statement)
